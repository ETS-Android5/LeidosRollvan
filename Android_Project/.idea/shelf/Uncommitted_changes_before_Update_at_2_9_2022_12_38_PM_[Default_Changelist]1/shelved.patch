Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'kotlin-android'\r\n    id 'kotlin-android-extensions'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n    defaultConfig {\r\n        applicationId \"com.example.leidosrollvan\"\r\n        minSdk 21\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.7.0'\r\n    implementation 'androidx.appcompat:appcompat:1.4.0'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.12.0'\r\n    implementation 'androidx.recyclerview:recyclerview:1.2.1'\r\n    implementation 'br.com.simplepass:loading-button-android:1.14.0'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'com.google.firebase:firebase-auth:19.2.0'\r\n    implementation 'com.google.firebase:firebase-database-ktx:20.0.3'\r\n    implementation 'com.google.firebase:firebase-database:20.0.3'\r\n    implementation 'com.google.firebase:firebase-storage:20.0.0'\r\n    implementation 'com.squareup.picasso:picasso:2.5.2'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    implementation 'com.google.firebase:firebase-inappmessaging:20.1.1'\r\n    implementation 'com.google.firebase:firebase-messaging:23.0.0'\r\n    implementation 'com.google.android.gms:play-services-nearby:17.0.0'\r\n    implementation 'com.android.volley:volley:1.2.0'\r\n    //implementation 'androidx.test.espresso:espresso-contrib:3.4.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n    androidTestImplementation 'androidx.test:runner:1.4.0'\r\n    androidTestImplementation 'androidx.test:rules:1.4.0'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.2'){\r\n        exclude module: 'support-annotations'\r\n        exclude module: 'support-v4'\r\n        exclude module: 'support-v13'\r\n        exclude module: 'recyclerview-v7'\r\n        exclude module: 'appcompat-v7'\r\n    }\r\n\r\n    apply plugin: 'kotlin-android'\r\n    apply plugin: 'kotlin-android-extensions'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -20,6 +20,7 @@
     buildTypes {
         release {
             minifyEnabled false
+            testCoverageEnabled = true
             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
         }
     }
Index: app/src/main/java/com/example/leidosrollvan/activity/BusinessProductFormActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leidosrollvan.activity;\r\n\r\nimport android.app.ActionBar;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.leidosrollvan.R;\r\nimport com.example.leidosrollvan.dataClasses.BusinessMenu;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n/*\r\nTODO: Add form validation\r\n */\r\npublic class BusinessProductFormActivity extends AppCompatActivity implements View.OnClickListener {\r\n    String[] sections =  {\"Breakfast\",\"Lunch\",\"Dinner\",\"Dessert\",\"Drinks\"};\r\n    private EditText productName, productPrice;\r\n    private Spinner spinnerSection;\r\n    private DatabaseReference reference;\r\n    private FirebaseUser user;\r\n    private String businessID;\r\n\r\n    @Override\r\n\r\n    /*\r\n    On create, populate dropdown tables.\r\n     */\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_business_product_form);\r\n        Button saveButton = (Button) findViewById(R.id.popupSave);\r\n        Button cancelButton = (Button) findViewById(R.id.popupCancel);\r\n\r\n        FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n        //spinnerCategory = findViewById(R.id.spinnerCategory);\r\n        spinnerSection = findViewById(R.id.spinnerSection);\r\n        //populate adapter\r\n        ArrayAdapter adapter2 = new ArrayAdapter(this,R.layout.spinner_section,sections);\r\n\r\n\r\n        //choose style of dropdown table\r\n        adapter2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n\r\n        //set adapter to spinner (populate dropdown table)\r\n        spinnerSection.setAdapter(adapter2);\r\n\r\n\r\n\r\n    }\r\n\r\n    /*\r\n    Converts form into BusinessMenu Object then save into database.\r\n     */\r\n    public void save(){\r\n\r\n        reference = FirebaseDatabase.getInstance().getReference(\"Business Menu\");\r\n        businessID = user.getUid();\r\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.hasChild(businessID)){//Menu or Categories exists\r\n                    reference.child(businessID).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            //Menu exists\r\n                            if(snapshot.hasChild(\"businessMenuItems\")){\r\n                                BusinessMenu oldMenu = snapshot.getValue(BusinessMenu.class);\r\n                                productName = (EditText) findViewById(R.id.productNamePopup);\r\n                                productPrice = (EditText) findViewById(R.id.productPricePopup);\r\n                                spinnerSection = findViewById(R.id.spinnerSection);\r\n                                String selectedName = productName.getText().toString().trim();\r\n                                String selectedPrice = productPrice.getText().toString().trim();\r\n                                String selectedSection = spinnerSection.getSelectedItem().toString().trim();\r\n                                HashMap<String, String> item = new HashMap<String, String>();\r\n                                item.put(selectedName,selectedPrice);\r\n                                oldMenu.addMenuItems(selectedSection,item);\r\n                                //old menu is now updated with new items\r\n                                FirebaseDatabase.getInstance().getReference(\"Business Menu\")\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .setValue(oldMenu);\r\n\r\n                            }\r\n                            //Only categories exist\r\n                            else{\r\n                                BusinessMenu oldMenu = snapshot.getValue(BusinessMenu.class);\r\n                                productName = (EditText) findViewById(R.id.productNamePopup);\r\n                                productPrice = (EditText) findViewById(R.id.productPricePopup);\r\n                                spinnerSection = findViewById(R.id.spinnerSection);\r\n                                String selectedName = productName.getText().toString().trim();\r\n                                String selectedPrice = productPrice.getText().toString().trim();\r\n\r\n                                String selectedSection = spinnerSection.getSelectedItem().toString().trim();\r\n                                HashMap<String, String> item = new HashMap<String, String>();\r\n                                HashMap<String, ArrayList<HashMap<String,String>>> businessMenuItems = new HashMap<String, ArrayList<HashMap<String,String>>>();\r\n                                ArrayList<HashMap<String,String>> items = new ArrayList<HashMap<String,String>>();\r\n\r\n                                //populate fields with form data\r\n                                item.put(selectedName,selectedPrice);\r\n                                items.add(item);\r\n                                businessMenuItems.put(selectedSection,items);\r\n\r\n                                //Create object with form data\r\n                                BusinessMenu newMenu = new BusinessMenu(businessMenuItems,oldMenu.getCategories());\r\n                                FirebaseDatabase.getInstance().getReference(\"Business Menu\")\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .setValue(newMenu);\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            Toast.makeText(BusinessProductFormActivity.this, \"Something Went Wrong!\", Toast.LENGTH_LONG).show();\r\n                        }\r\n\r\n                    });\r\n                }\r\n                //Menu and categories don't exist\r\n                else{\r\n                    productName = (EditText) findViewById(R.id.productNamePopup);\r\n                    productPrice = (EditText) findViewById(R.id.productPricePopup);\r\n                    spinnerSection = findViewById(R.id.spinnerSection);\r\n                    String selectedName = productName.getText().toString().trim();\r\n                    String selectedPrice = productPrice.getText().toString().trim();\r\n                    String selectedSection = spinnerSection.getSelectedItem().toString().trim();\r\n                    HashMap<String, String> item = new HashMap<String, String>();\r\n                    HashMap<String, ArrayList<HashMap<String,String>>> businessMenuItems = new HashMap<String, ArrayList<HashMap<String,String>>>();\r\n                    ArrayList<HashMap<String,String>> items = new ArrayList<HashMap<String,String>>();\r\n\r\n                    //populate fields with form data\r\n                    item.put(selectedName,selectedPrice);\r\n                    items.add(item);\r\n                    businessMenuItems.put(selectedSection,items);\r\n\r\n                    //Create object with form data. categories list empty.\r\n                    BusinessMenu newMenu = new BusinessMenu(businessMenuItems,new ArrayList<String>());\r\n                    FirebaseDatabase.getInstance().getReference(\"Business Menu\")\r\n                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                            .setValue(newMenu);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                Toast.makeText(BusinessProductFormActivity.this, \"Something Went Wrong!\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void cancel(View v){\r\n        finish();\r\n        startActivity(new Intent(this, BusinessHomeActivity.class));\r\n    }\r\n\r\n    public void clickSave(View v){\r\n        save();\r\n        Intent i = new Intent(this, BusinessHomeActivity.class);\r\n        startActivity(i);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/leidosrollvan/activity/BusinessProductFormActivity.java b/app/src/main/java/com/example/leidosrollvan/activity/BusinessProductFormActivity.java
--- a/app/src/main/java/com/example/leidosrollvan/activity/BusinessProductFormActivity.java	
+++ b/app/src/main/java/com/example/leidosrollvan/activity/BusinessProductFormActivity.java	
@@ -74,6 +74,9 @@
 
         reference = FirebaseDatabase.getInstance().getReference("Business Menu");
         businessID = user.getUid();
+        productName = (EditText) findViewById(R.id.productNamePopup);
+        productPrice = (EditText) findViewById(R.id.productPricePopup);
+        //if(productName)
         reference.addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
@@ -84,8 +87,6 @@
                             //Menu exists
                             if(snapshot.hasChild("businessMenuItems")){
                                 BusinessMenu oldMenu = snapshot.getValue(BusinessMenu.class);
-                                productName = (EditText) findViewById(R.id.productNamePopup);
-                                productPrice = (EditText) findViewById(R.id.productPricePopup);
                                 spinnerSection = findViewById(R.id.spinnerSection);
                                 String selectedName = productName.getText().toString().trim();
                                 String selectedPrice = productPrice.getText().toString().trim();
Index: app/src/androidTest/java/com/example/leidosrollvan/MainActivityEspressoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leidosrollvan;\r\n\r\nimport static androidx.test.espresso.Espresso.onView;\r\nimport static androidx.test.espresso.Espresso.pressBack;\r\nimport static androidx.test.espresso.action.ViewActions.click;\r\nimport static androidx.test.espresso.action.ViewActions.scrollTo;\r\nimport static androidx.test.espresso.assertion.ViewAssertions.matches;\r\nimport static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\r\nimport static androidx.test.espresso.matcher.ViewMatchers.withId;\r\n\r\nimport androidx.test.espresso.contrib.RecyclerViewActions;\r\nimport androidx.test.ext.junit.rules.ActivityScenarioRule;\r\nimport androidx.test.ext.junit.runners.AndroidJUnit4;\r\n\r\nimport com.example.leidosrollvan.activity.MainActivity;\r\n\r\nimport org.junit.Rule;\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\n\r\n@RunWith(AndroidJUnit4.class)\r\npublic class MainActivityEspressoTest {\r\n\r\n\r\n    @Rule\r\n    public ActivityScenarioRule<MainActivity> mainActivityActivityScenarioRule =\r\n            new ActivityScenarioRule<MainActivity>(MainActivity.class);\r\n\r\n    //Near You\r\n    @Test\r\n    public void test_NearYou_navigation() throws InterruptedException {\r\n        Thread.sleep(1000);\r\n        onView(withId(R.id.businessHorizRecyclerView))\r\n                .perform(RecyclerViewActions.actionOnItemAtPosition(0,click()));\r\n        onView(withId(R.id.business_details_page)).check(matches(isDisplayed()));\r\n    }\r\n    @Test\r\n    public void test_NearYou_back_navigation() throws InterruptedException {\r\n        Thread.sleep(1000);\r\n        onView(withId(R.id.businessHorizRecyclerView))\r\n                .perform(RecyclerViewActions.actionOnItemAtPosition(0,click()));\r\n        onView(withId(R.id.business_details_page)).check(matches(isDisplayed()));\r\n        pressBack();\r\n        onView(withId(R.id.customer_home_page)).check(matches(isDisplayed()));\r\n    }\r\n\r\n    //Top Deals\r\n    @Test\r\n    public void test_TopDeals_navigation() throws InterruptedException {\r\n        Thread.sleep(1000);\r\n        onView(withId(R.id.businessHorizRecyclerView2))\r\n                .perform(scrollTo(),RecyclerViewActions.actionOnItemAtPosition(0,click()));\r\n        onView(withId(R.id.business_details_page)).check(matches(isDisplayed()));\r\n    }\r\n\r\n    @Test\r\n    public void test_TopDeals_back_navigation() throws InterruptedException {\r\n        Thread.sleep(1000);\r\n        onView(withId(R.id.businessHorizRecyclerView2))\r\n                .perform(scrollTo(),RecyclerViewActions.actionOnItemAtPosition(0,click()));\r\n        onView(withId(R.id.business_details_page)).check(matches(isDisplayed()));\r\n        pressBack();\r\n        onView(withId(R.id.customer_home_page)).check(matches(isDisplayed()));\r\n    }\r\n\r\n    //All Businesses\r\n//Top Deals\r\n\r\n    @Test\r\n    public void test_allBusinesses_navigation() throws InterruptedException {\r\n        Thread.sleep(1000);\r\n        onView(withId(R.id.MoreBusi)).perform(scrollTo());\r\n        onView(withId(R.id.businessRecyclerView))\r\n                .perform(scrollTo(),RecyclerViewActions.actionOnItemAtPosition(2,click()));\r\n        onView(withId(R.id.business_details_page)).check(matches(isDisplayed()));\r\n    }\r\n\r\n    @Test\r\n    public void test_allBusinesses_back_navigation() throws InterruptedException {\r\n        Thread.sleep(1000);\r\n        onView(withId(R.id.MoreBusi)).perform(scrollTo());\r\n        onView(withId(R.id.businessRecyclerView))\r\n                .perform(scrollTo(),RecyclerViewActions.actionOnItemAtPosition(2,click()));\r\n        onView(withId(R.id.business_details_page)).check(matches(isDisplayed()));\r\n        pressBack();\r\n        onView(withId(R.id.customer_home_page)).check(matches(isDisplayed()));\r\n    }\r\n\r\n    //Clicking on navbar navigation then clicking back will not bring you to previous fragment\r\n\r\n    @Test\r\n    public void test_navbar_home2search_navigation(){\r\n        onView(withId(R.id.id_search))\r\n                .perform(click());\r\n        onView(withId(R.id.search_page)).check(matches(isDisplayed()));\r\n    }\r\n//    @Test\r\n//    public void test_navbar_home2search_back_navigation(){\r\n//        onView(withId(R.id.id_search))\r\n//                .perform(click());\r\n//        onView(withId(R.id.search_page)).check(matches(isDisplayed()));\r\n//        pressBack();\r\n//        onView(withId(R.id.customer_home_page)).check(matches(isDisplayed()));\r\n//    }\r\n    @Test\r\n    public void test_navbar_home2map_navigation(){\r\n        onView(withId(R.id.id_map))\r\n                .perform(click());\r\n        onView(withId(R.id.map_page)).check(matches(isDisplayed()));\r\n    }\r\n//    @Test\r\n//    public void test_navbar_home2map_back_navigation(){\r\n//        onView(withId(R.id.id_map))\r\n//                .perform(click());\r\n//        onView(withId(R.id.map_page)).check(matches(isDisplayed()));\r\n//        pressBack();\r\n//        onView(withId(R.id.customer_home_page)).check(matches(isDisplayed()));\r\n//    }\r\n    //\r\n//    @Test\r\n//    public void test_navbar_home2account_navigation(){\r\n//        onView(withId(R.id.id_account))\r\n//                .perform(click());\r\n//        onView(withId(R.id.customer_guest_account_page)).check(matches(isDisplayed()));\r\n//        onView(withId(R.id.customer_account_page)).check(matches(isDisplayed()));\r\n//    }\r\n//    @Test\r\n//    public void test_navbar_home2account_back_navigation(){\r\n//        onView(withId(R.id.id_account))\r\n//                .perform(click());\r\n//        onView(withId(R.id.customer_account_page)).check(matches(isDisplayed()));\r\n//        pressBack();\r\n//        onView(withId(R.id.customer_home_page)).check(matches(isDisplayed()));\r\n//    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/leidosrollvan/MainActivityEspressoTest.java b/app/src/androidTest/java/com/example/leidosrollvan/MainActivityEspressoTest.java
--- a/app/src/androidTest/java/com/example/leidosrollvan/MainActivityEspressoTest.java	
+++ b/app/src/androidTest/java/com/example/leidosrollvan/MainActivityEspressoTest.java	
@@ -48,7 +48,7 @@
     @Test
     public void test_TopDeals_navigation() throws InterruptedException {
         Thread.sleep(1000);
-        onView(withId(R.id.businessHorizRecyclerView2))
+        onView(withId(R.id.businessHorizRecyclerView))
                 .perform(scrollTo(),RecyclerViewActions.actionOnItemAtPosition(0,click()));
         onView(withId(R.id.business_details_page)).check(matches(isDisplayed()));
     }
@@ -56,7 +56,7 @@
     @Test
     public void test_TopDeals_back_navigation() throws InterruptedException {
         Thread.sleep(1000);
-        onView(withId(R.id.businessHorizRecyclerView2))
+        onView(withId(R.id.businessHorizRecyclerView))
                 .perform(scrollTo(),RecyclerViewActions.actionOnItemAtPosition(0,click()));
         onView(withId(R.id.business_details_page)).check(matches(isDisplayed()));
         pressBack();
